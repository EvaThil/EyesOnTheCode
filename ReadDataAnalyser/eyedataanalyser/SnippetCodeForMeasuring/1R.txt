public class Ambiguous {
	public static void sleep(long millis) {
		try {
			Thread.sleep(millis);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		Observable<String> obs1 =
				Observable.interval(1, TimeUnit.SECONDS)
				.map(l -> "Dog");

		Observable<String> obs2 =
				Observable.interval(500, TimeUnit.MILLISECONDS)
				.map(l -> "Cat");

		Observable.amb(Arrays.asList(obs1, obs2))
			.subscribe(System.out::print);

		sleep(2000);
	}
}