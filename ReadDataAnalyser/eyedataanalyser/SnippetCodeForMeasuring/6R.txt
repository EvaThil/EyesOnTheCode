public class StopAndUnsubscribe {
	public static void sleep(long millis) {
		try {
			Thread.sleep(millis);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		Disposable disp = Observable.interval(1, TimeUnit.SECONDS)
				.map(i -> i + 1)
				.doOnDispose(() -> System.out.print("disposed"))
				.unsubscribeOn(Schedulers.io())
				.subscribe(System.out::print);

		sleep(3000);
		disp.dispose();
	}
}